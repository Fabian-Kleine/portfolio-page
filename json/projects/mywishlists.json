{
    "title": "My Wishlists",
    "filename": "mywishlists",
    "overview": "The My Wishlists Website lets you create and edit custom wishlists with attached links to products. Further other users can visit the wishlist with the shareable link and mark products as purchased in realtime.",
    "content": [
        {
            "type": "list",
            "title": "Core Features",
            "list": [
                "create and update wishlists (title, description, deadline)",
                "add wishes/products to your wishlist (link, title, annotation, price)",
                "share your wishlist with a public link",
                "live counter for wishlist deadline",
                "mark products as purchased in realtime",
                "credentials login using supabase"
            ]
        },
        {
            "type": "text",
            "title": "Scraping Data from webshops",
            "text": "Data like product titles, product descriptions and images can be scraped from any website that has it defined in the head using meta tags. They are scraped with cheerio. Prices can only be scraped from specific websites which are defined in <a href='https://github.com/Fabian-Kleine/MyWishlists/blob/main/app/api/getProduct/webshops.js' target='_blank' class='underline font-bold'><i>webshops.js</i></a>. Further an affiliate ID is added to the url if it is defined in <i>webshops.js</i>."
        },
        {
            "type": "code",
            "language": "javascript",
            "code": "import axios from 'axios';\nimport cheerio from 'cheerio';\nimport webshops from './webshops';\n\nexport default async function WebshopFetch(body) {\n    let productData = {\n        title: body.title,\n        description: body.description || '',\n        price: body.price,\n        image: null,\n        link: body.link\n    }\n    if (!body.link) return productData;\n\n    try {\n        const url = new URL(body.link);\n        const domainname = url.hostname.replace(/(www\\.)?/, '').split('.')[0];\n\n        const webpage = await axios.get(url);\n        const $ = cheerio.load(webpage.data);\n\n        const metadata = {\n            title: $('meta[property='og:title']').attr('content') || $('title').text() || '',\n            description: $('meta[name='description']').attr('content') || $('meta[property='og:description']').attr('content') || 'No description found',\n            image: $('meta[property='og:image']').attr('content') || null,\n        };\n\n        productData = {...productData, ...metadata};\n\n        if (webshops.some(shop => shop.hostname === domainname)) {\n            const webshopdata = webshops.find((webshop) => {\n                return webshop.hostname == domainname;\n            });\n\n            let price = !body.price ? $(webshopdata.priceQuery).first().text().trim() : body.price;\n            if (webshopdata.composedPrice && price != body.price) {\n                price = price + $(webshopdata.priceQuery2).first().text();\n            }\n            if (webshopdata.replacePriceText && price != body.price) {\n                price = price.replace(/[^0-9,]/g, '').trim();\n            }\n            productData.price = price;\n\n            if(webshopdata.imageQuery) {\n                const image = $(webshopdata.imageQuery).first().attr('src');\n                productData.image = image;\n            }\n    \n            if (webshopdata.affiliateID) {\n                url.hash = '';\n                url.search = `?tag=${webshopdata.affiliateID}`;\n                productData.link = url.href;\n            }\n        }\n    } catch (error) {\n        console.log(error)\n    } finally {\n        return productData;\n    }\n}"
        },
        {
            "type": "text",
            "text": "Further an affiliate ID is added for amazon (more shops will be added in the future)."
        },
        {
            "type": "list",
            "title": "What Did I Learn?",
            "list": [
                "Supabase",
                "NEXT.JS",
                "client- and serverside rendering",
                "Webscraping"
            ]
        }
    ],
    "technologies": ["html", "css", "js", "next", "supabase", "tailwindcss"],
    "tools": ["daisyui", "vscode"],
    "tags": ["js", "medium", "finished"],
    "buttons": {
        "project": "https://mywishlists.fabian-kleine.dev",
        "github": "https://github.com/Fabian-Kleine/MyWishlists"
    }
}