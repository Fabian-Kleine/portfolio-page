{
    "title": "Portfolio Page",
    "filename": "portfolio-page",
    "overview": "My Portfolio Page contains my projects, my skills and a contact page. The website is separated into 4 different pages.<br /> The first one beeing the <i>Home</i> page which contains some general information about me. The second one is the <i>Projects</i> page which displayes all of my Projects. The <i>Project</i> Page contains more detailed information about a project. The last page is the contact page which provides a contact form to contact me.",
    "content": [
        {
            "type": "text",
            "title": "Setup",
            "text": "The page is built using Vite + React and React-Router-DOM for the routing. The pages like <i>Home</i> or <i>Projects</i> are located in the pages folder. Components like the <i>Navbar</i> or the <i>Footer</i> are located in the components folder.<br />Static Data like the Projects are stored in JSON files in the json folder which we will focus on later."
        },
        {
            "type": "code",
            "language": "javascript",
            "title": "Routing",
            "code": "import './App.css'\nimport { Route, createBrowserRouter, createRoutesFromElements, RouterProvider } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Projects from '../pages/Projects';\nimport Project from '../pages/Project';\nimport Contact from '../pages/Contact';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <>\n      <Route index element={<Home />} />\n      <Route path='/projects' element={<Projects />} />\n      <Route path='/project/:projectname' element={<Project />} />\n      <Route path='/contact' element={<Contact />} />\n    </>\n  )\n)\n\nfunction App({ routes }) {\n  return (\n    <>\n      <Navbar />\n      <RouterProvider router={router} />\n      <Footer />\n    </>\n  )\n}\n\nexport default App;",
            "caption": "React-Router-DOM Setup in App.jsx",
            "text": "As you can see the <i>RouterProvider</i> is wrapped by the <i>Navbar</i> and the <i>Footer</i>. Because of this we only need to focus on the content of a page because the <i>Navbar</i> and the <i>Footer</i> will be rendered on every page.<br />The Route for the <i>Project</i> Page has the parameter :projectname passed so we can later define wich Project should be rendered."
        },
        {
            "type": "text",
            "title": "Projects Page",
            "text": "The Projects Page imports the projects from <i>@/json/projects/index.js</i> and lists them with a map function."
        },
        {
            "type": "code",
            "language": "javascript",
            "code": "import R6CreativeHub from './r6-creative-hub.json';\nimport PortfolioPage from './portfolio-page.json';\n\nconst projects = [R6CreativeHub, PortfolioPage];\n\nexport default projects;",
            "caption": "@/json/projects/index.js"
        },
        {
            "type": "code",
            "language": "javascript",
            "code": "import React from 'react';\nimport TechnologieBadge from '../components/TechnologieBadge';\nimport projects from '../json/projects/';\n\nconst Projects = () => {\n    /* <Container> is a placeholder for the rest of the file */\n    return (\n       <Container>\n            {\n                projects.map((project) =>\n                    <div>\n                        <a href={'/project/' + project.filename}>\n                            <h2>{project.title}</h2>\n                            <div>\n                                <TechnologieBadge technologies={project.technologies} type={'badge'} />\n                            </div>\n                            <p dangerouslySetInnerHTML={{ __html: project.overview }}>\n                            </p>\n                       </a>\n                    </div>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default Projects;",
            "caption": "Projects.jsx (unstyled)"
        }, 
        {
            "type": "text",
            "title": "Project Page",
            "text": "The Project Page dynamically imports the JSON file of the project which is defined in the URL-Parameter <i>projectname</i> which we setup earlier in App.jsx. After that it loops through the content property with the map function and renders the content depending on the type defined in the Object.<br />When <i>type</i> is defined as <i>code</i> the code is rendered with Syntax-Highlighting. This is done with the npm packages <i>react-syntax-highlighter</i> and <i>highlight.js</i>."
        },
        {
            "type": "text",
            "title": "Contact Page",
            "text": "The Contact Page features a form which opens the email application after submit. This is done by running <i>window.location.href = 'mailto:&#060;Email&#062;subject=&#060;Subject&#062;&body=&#060;Body&#062;'</i> and replacing <i>&#060;Subject&#062;</i> and <i>&#060;Body&#062;</i> with the values entered in the input fields."
        },
        {
            "type": "text",
            "title": "Components",
            "text": "The Website uses three Components: <i>Navbar</i>, <i>Footer</i> and <i>TechnologieBadge</i><br />The <i>Navbar</i> is mobile firendly because it switches to a Hamburger Menu when the screen-width is getting to tight to display the whole Navbar. This is done with the Tailwindcss Breakpoints.<br />The <i>Footer</i> just returns the HTML for the footer.<br />The <i>TechnologieBadge</i> Component takes technologies and type as props. It imports the data about the technologies from <i>@/json/technologies.json</i>. It uses this data and the prop technologies which is an Array to render out Badges depending on the style defined in the type prop. This Component is used in <i>Home.jsx</i>, <i>Projects.jsx</i> and <i>Project.jsx</i>."
        },
        {
            "type": "list",
            "title": "What Did I Learn?",
            "list": [
                "Routing in React",
                "Building more mobile-friendly pages",
                "Expanding my knowledge on some CSS-styles"
            ]
        }
    ],
    "technologies": ["html", "css", "js", "react", "tailwindcss"],
    "tools": ["vscode", "vite", "plesk"],
    "buttons": {
        "project": "https://fabian-kleine.dev",
        "github": "https://github.com/Fabian-Kleine/portfolio-page"
    }
}